{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AppComponent {\n  constructor() {\n    this.password = '';\n    this.includeLetters = false;\n    this.includeNumbers = false;\n    this.includeSymbols = false;\n    this.length = 0;\n  }\n  onChangeUseLetters() {\n    this.includeLetters = !this.includeLetters;\n  }\n  onChangeUseNumbers() {\n    this.includeNumbers = !this.includeNumbers;\n  }\n  onChangeUseSymbols() {\n    this.includeSymbols = !this.includeSymbols;\n  }\n  onChangeLength(event) {\n    const target = event.target;\n    const parsedValue = parseInt(target.value);\n    if (!isNaN(parsedValue)) {\n      this.length = parsedValue;\n    }\n    console.log(\"Password Length \", this.length);\n  }\n  onButtonClick() {\n    let validChar = '';\n    const letters = 'abcdefghijklmnopqrstuvwxyz';\n    const numbers = '1234567890';\n    const symbols = '!@#$%^&*()';\n    let pwd = '';\n    if (this.includeLetters) {\n      validChar += letters;\n    }\n    if (this.includeNumbers) {\n      validChar += numbers;\n    }\n    if (this.includeSymbols) {\n      validChar += symbols;\n    }\n    for (let i = 1; i <= this.length; i++) {\n      const index = Math.floor(Math.random() * validChar.length);\n      pwd += validChar[index];\n    }\n    this.password = pwd;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 30,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"columns\", \"is-centered\"], [1, \"box\", \"column\", \"is-one-third\"], [1, \"title\", \"has-text-centered\"], [1, \"field\"], [1, \"input\", 3, \"input\"], [1, \"control\"], [1, \"checkbox\"], [\"type\", \"checkbox\", 3, \"change\"], [1, \"button\", \"is-link\", \"is-fullwidth\", 3, \"disabled\", \"click\"], [1, \"box\"], [1, \"input\", 3, \"value\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"Password Generator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\");\n      i0.ɵɵtext(7, \"Length\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"input\", function AppComponent_Template_input_input_8_listener($event) {\n        return ctx.onChangeLength($event.target.value);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 6)(11, \"label\", 7)(12, \"input\", 8);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_12_listener() {\n        return ctx.onChangeUseLetters();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \" Use Letters \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 6)(16, \"label\", 7)(17, \"input\", 8);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_17_listener() {\n        return ctx.onChangeUseNumbers();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" Use Numbers \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 6)(21, \"label\", 7)(22, \"input\", 8);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_22_listener() {\n        return ctx.onChangeUseSymbols();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \" Use Symbols \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_24_listener() {\n        return ctx.onButtonClick();\n      });\n      i0.ɵɵtext(25, \" Generate! \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 10)(27, \"label\");\n      i0.ɵɵtext(28, \"Your Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 11);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"disabled\", !(ctx.length && (ctx.includeLetters || ctx.includeSymbols || ctx.includeNumbers)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.password);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,YAAY;EALzBC;IAOE,aAAQ,GAAG,EAAE;IACb,mBAAc,GAAG,KAAK;IACtB,mBAAc,GAAG,KAAK;IACtB,mBAAc,GAAG,KAAK;IACtB,WAAM,GAAG,CAAC;;EAEVC,kBAAkB;IAChB,IAAI,CAACC,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;EAC5C;EAEAC,kBAAkB;IAChB,IAAI,CAACC,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;EAC5C;EAEAC,kBAAkB;IAChB,IAAI,CAACC,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;EAC5C;EAEAC,cAAc,CAAEC,KAAa;IAE3B,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAA0B;IAC/C,MAAMC,WAAW,GAAGC,QAAQ,CAACF,MAAM,CAACG,KAAK,CAAC;IAC1C,IAAG,CAACC,KAAK,CAACH,WAAW,CAAC,EAAE;MACtB,IAAI,CAACI,MAAM,GAAGJ,WAAW;;IAE3BK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAC,IAAI,CAACF,MAAM,CAAC;EAC7C;EAEAG,aAAa;IAEX,IAAIC,SAAS,GAAG,EAAE;IAClB,MAAMC,OAAO,GAAG,4BAA4B;IAC5C,MAAMC,OAAO,GAAG,YAAY;IAC5B,MAAMC,OAAO,GAAG,YAAY;IAE5B,IAAIC,GAAG,GAAC,EAAE;IAEV,IAAI,IAAI,CAACpB,cAAc,EAAE;MACvBgB,SAAS,IAAIC,OAAO;;IAGtB,IAAG,IAAI,CAACf,cAAc,EAAE;MACtBc,SAAS,IAAIE,OAAO;;IAGtB,IAAG,IAAI,CAACd,cAAc,EAAE;MACtBY,SAAS,IAAIG,OAAO;;IAGtB,KAAI,IAAIE,CAAC,GAAC,CAAC,EAACA,CAAC,IAAE,IAAI,CAACT,MAAM,EAACS,CAAC,EAAE,EAAC;MAC7B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGT,SAAS,CAACJ,MAAM,CAAC;MAC1DQ,GAAG,IAAIJ,SAAS,CAACM,KAAK,CAAC;;IAEzB,IAAI,CAACI,QAAQ,GAAGN,GAAG;EAErB;;AAzDWvB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPzBC,8BAAuB;MAGmBA,kCAAkB;MAAAA,iBAAK;MAE3DA,8BAAmB;MACVA,sBAAM;MAAAA,iBAAQ;MACrBA,gCAAqE;MAAhDA;QAAA,OAASC,uCAAmC;MAAA,EAAC;MAAlED,iBAAqE;MAGvEA,8BAAmB;MAGNA;QAAA,OAAUC,wBAAoB;MAAA,EAAC;MAAtCD,iBAAyD;MACzDA,8BACF;MAAAA,iBAAQ;MAIZA,+BAAmB;MAGNA;QAAA,OAAUC,wBAAoB;MAAA,EAAC;MAAtCD,iBAAyD;MACzDA,8BACF;MAAAA,iBAAQ;MAIZA,+BAAmB;MAGNA;QAAA,OAAUC,wBAAoB;MAAA,EAAC;MAAtCD,iBAAyD;MACzDA,8BACF;MAAAA,iBAAQ;MAIZA,kCAEkE;MAA9DA;QAAA,OAASC,mBAAe;MAAA,EAAC;MAC3BD,4BACF;MAAAA,iBAAS;MAETA,gCAAiB;MACRA,8BAAa;MAAAA,iBAAQ;MAC5BA,6BAA0C;MAC5CA,iBAAM;;;MATEA,gBAEL;MAFKA,4GAEL;MAMoBA,eAAkB;MAAlBA,oCAAkB","names":["AppComponent","constructor","onChangeUseLetters","includeLetters","onChangeUseNumbers","includeNumbers","onChangeUseSymbols","includeSymbols","onChangeLength","event","target","parsedValue","parseInt","value","isNaN","length","console","log","onButtonClick","validChar","letters","numbers","symbols","pwd","i","index","Math","floor","random","password","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\AngularProjects\\PasswordGenerator\\src\\app\\app.component.ts","D:\\AngularProjects\\PasswordGenerator\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n\n  password = '';\n  includeLetters = false;\n  includeNumbers = false;\n  includeSymbols = false;\n  length = 0;\n\n  onChangeUseLetters() {\n    this.includeLetters = !this.includeLetters;\n  }\n\n  onChangeUseNumbers() {\n    this.includeNumbers = !this.includeNumbers;\n  }\n\n  onChangeUseSymbols() {\n    this.includeSymbols = !this.includeSymbols;\n  }\n\n  onChangeLength (event : Event) {\n\n    const target = event.target as HTMLInputElement;\n    const parsedValue = parseInt(target.value);\n    if(!isNaN(parsedValue)) {\n      this.length = parsedValue;\n    }\n    console.log(\"Password Length \",this.length);\n  }\n\n  onButtonClick() {\n\n    let validChar = '';\n    const letters = 'abcdefghijklmnopqrstuvwxyz';\n    const numbers = '1234567890';\n    const symbols = '!@#$%^&*()';\n\n    let pwd='';\n\n    if (this.includeLetters) {\n      validChar += letters;\n    }\n\n    if(this.includeNumbers) {\n      validChar += numbers;\n    }\n\n    if(this.includeSymbols) {\n      validChar += symbols;\n    }\n\n    for(let i=1;i<=this.length;i++){\n      const index = Math.floor(Math.random() * validChar.length);\n      pwd += validChar[index];\n    }\n    this.password = pwd;\n\n  }\n}\n","<div class=\"container\">\n  <div class=\"columns is-centered\">\n    <div class=\"box column is-one-third\">\n      <h1 class=\"title has-text-centered\">Password Generator</h1>\n\n      <div class=\"field\">\n        <label>Length</label>\n        <input class=\"input\" (input)=\"onChangeLength($event.target.value)\" />\n      </div>\n\n      <div class=\"field\">\n        <div class=\"control\">\n          <label class=\"checkbox\">\n            <input (change)=\"onChangeUseLetters()\" type=\"checkbox\" />\n            Use Letters\n          </label>\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <div class=\"control\">\n          <label class=\"checkbox\">\n            <input (change)=\"onChangeUseNumbers()\" type=\"checkbox\" />\n            Use Numbers\n          </label>\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <div class=\"control\">\n          <label class=\"checkbox\">\n            <input (change)=\"onChangeUseSymbols()\" type=\"checkbox\" />\n            Use Symbols\n          </label>\n        </div>\n      </div>\n\n      <button [disabled]=\"\n          !(length && (includeLetters || includeSymbols || includeNumbers))\n        \" (click)=\"onButtonClick()\" class=\"button is-link is-fullwidth\">\n        Generate!\n      </button>\n\n      <div class=\"box\">\n        <label>Your Password</label>\n        <input class=\"input\" [value]=\"password\" />\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}